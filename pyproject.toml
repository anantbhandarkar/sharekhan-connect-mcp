[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sharekhan-connect-mcp"
version = "1.0.0"
description = "A Model Context Protocol (MCP) server for Sharekhan trading APIs"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sharekhan MCP Team", email = "support@sharekhan-mcp.com"}
]
maintainers = [
    {name = "Sharekhan MCP Team", email = "support@sharekhan-mcp.com"}
]
keywords = [
    "mcp", "model-context-protocol", "sharekhan", "trading", "api", 
    "finance", "stock-market", "india", "claude", "ai"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "websocket-client>=1.6.4",
    "loguru>=0.7.2",
    "requests>=2.31.0",
    "websockets>=12.0",
    "psutil>=5.9.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    # Code quality tools
    "radon>=6.0.0",
    "xenon>=0.9.0",
    "pydocstyle>=6.3.0",
    # Security tools
    "detect-secrets>=1.4.0",
    "bandit>=1.7.0",
    "pip-audit>=2.6.0",
    "pip-licenses>=4.3.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    # Performance testing
    "pytest-benchmark>=4.0.0"
]
quality = [
    "radon>=6.0.0",
    "xenon>=0.9.0",
    "pydocstyle>=6.3.0"
]
security = [
    "detect-secrets>=1.4.0",
    "bandit>=1.7.0",
    "pip-audit>=2.6.0"
]

[project.urls]
Homepage = "https://github.com/sharekhan-mcp/sharekhan-connect-mcp"
Documentation = "https://github.com/sharekhan-mcp/sharekhan-connect-mcp#readme"
Repository = "https://github.com/sharekhan-mcp/sharekhan-connect-mcp.git"
Issues = "https://github.com/sharekhan-mcp/sharekhan-connect-mcp/issues"
Changelog = "https://github.com/sharekhan-mcp/sharekhan-connect-mcp/blob/main/CHANGELOG.md"

[project.scripts]
sharekhan-mcp = "sharekhan_connect_mcp.server:main"

[project.gui-scripts]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
sharekhan_connect_mcp = ["*.json", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sharekhan_connect_mcp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "loguru.*",
    "websockets.*",
    "psutil.*",
    "fastapi.*",
    "uvicorn.*",
    "websocket_client.*",
    "requests.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmarks"
]

# Code quality configuration
[tool.radon]
cc_min = "B"
mi_min = "B"

[tool.xenon]
max_absolute = "B"
max_modules = "A"
max_average = "A"

# Documentation configuration
[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D104", "D105", "D107"]
match = "(?!test_).*\\.py"
match_dir = "(?!test).*"
